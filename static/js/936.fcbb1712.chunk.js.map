{"version":3,"file":"static/js/936.fcbb1712.chunk.js","mappings":"4LAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,GAGd,C,2ECXD,EAAuB,uB,SCGVC,EAAW,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC1BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,yBACE,SAAC,KAAD,CACEC,UAAWC,EACXC,GAAE,kBAAaL,GACfM,MAAO,CAAEC,KAAMN,GAHjB,SAKGF,KAIR,EChBD,EAAuB,yBCGVS,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,+BACE,eAAIN,UAAWC,EAAf,SACGK,EAAOC,KAAI,SAAAC,GACV,OAAO,SAACb,EAAD,CAAsBE,GAAIW,EAAGX,GAAID,MAAOY,EAAGZ,OAA5BY,EAAGX,GAC1B,OAIR,C,sICbD,EAA0B,sB,kBC6B1B,EAxBa,WACX,OAAkCY,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAAe,mCAAG,2FACtBH,GAAa,GADS,UAEDI,EAAAA,EAAAA,MAFC,OAEhBT,EAFgB,OAGtBO,EAAgBP,EAAOU,KAAKC,SAC5BN,GAAa,GAJS,2CAAH,qDAWrB,OAJAO,EAAAA,EAAAA,YAAU,WACRJ,GACD,GAAE,KAGD,iCACE,eAAId,UAAWC,EAAf,SAA+B,uBAC/B,SAACI,EAAA,EAAD,CAAYC,OAAQM,IACnBF,IAAa,SAACrB,EAAA,EAAD,MAGnB,C,uMC1BD8B,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMJ,EAAW,mCAAG,2FACZK,EAAWD,EAAAA,EAAAA,IAAA,qCAAwCE,EAAAA,IADvC,kBAEXD,GAFW,2CAAH,qDAKXE,EAAY,mCAAG,WAAMzB,GAAN,8EACbuB,EAAWD,EAAAA,EAAAA,IAAA,gBAAmBtB,EAAnB,oBAAiCwB,EAAAA,EAAjC,oBADE,kBAEZD,GAFY,2CAAH,sDAKZG,EAAe,mCAAG,WAAO1B,GAAP,4FAAW2B,EAAX,+BAAkB,EAClCJ,EAAWD,EAAAA,EAAAA,IAAA,gBACNtB,EADM,4BACgBwB,EAAAA,EADhB,gCAC+CG,IAF1C,kBAIfJ,GAJe,2CAAH,sDAOfK,EAAY,mCAAG,WAAM5B,GAAN,8EACbuB,EAAWD,EAAAA,EAAAA,IAAA,gBACNtB,EADM,4BACgBwB,EAAAA,EADhB,oBADE,kBAIZD,GAJY,2CAAH,sDAOZM,EAAW,mCAAG,WAAMC,GAAN,8EACZP,EAAWD,EAAAA,EAAAA,IAAA,+BACSE,EAAAA,EADT,iCACyCM,EADzC,yBADC,kBAIXP,GAJW,2CAAH,qD,4EC5BV,IAAMC,EAAU,mCACVO,EACX,2J","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/ListItem/ListItem.module.css?0678","components/ListItem/ListItem.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/api.js","services/utils.js"],"sourcesContent":["import { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"96\"\n      visible={true}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"ListItem_link__twHxh\"};","import { Link, useLocation } from 'react-router-dom';\nimport styles from './ListItem.module.css';\nimport PropTypes from 'prop-types';\n\nexport const ListItem = ({ title, id }) => {\n  const location = useLocation();\n  return (\n    <li>\n      <Link\n        className={styles.link}\n        to={`/movies/${id}`}\n        state={{ from: location }}\n      >\n        {title}\n      </Link>\n    </li>\n  );\n};\n\nListItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\"};","import { ListItem } from 'components/ListItem/ListItem';\nimport styles from './MoviesList.module.css';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <>\n      <ul className={styles.list}>\n        {movies.map(el => {\n          return <ListItem key={el.id} id={el.id} title={el.title} />;\n        })}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"Home_heading__-DhKF\"};","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { getTrending } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport styles from './Home.module.css';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [trendingList, setTrendingList] = useState([]);\n\n  const getTrendingList = async () => {\n    setIsLoading(true);\n    const movies = await getTrending();\n    setTrendingList(movies.data.results);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getTrendingList();\n  }, []);\n\n  return (\n    <>\n      <h2 className={styles.heading}>Today's trending:</h2>\n      <MoviesList movies={trendingList} />\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport { API_KEY } from './utils';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst getTrending = async () => {\n  const response = axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response;\n};\n\nconst getMovieInfo = async id => {\n  const response = axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return response;\n};\n\nconst getMovieReviews = async (id, page = 1) => {\n  const response = axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response;\n};\n\nconst getMovieCast = async id => {\n  const response = axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nconst searchMovie = async query => {\n  const response = axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n  );\n  return response;\n};\n\nexport {\n  getTrending,\n  getMovieInfo,\n  getMovieReviews,\n  getMovieCast,\n  searchMovie,\n};\n","export const API_KEY = '330fed723c91519f30cbe5ad45b50ac2';\nexport const IMG_PLACEHOLDER =\n  'https://previews.123rf.com/images/viktorijareut/viktorijareut1905/viktorijareut190500747/123236861-default-avatar-profile-icon-grey-photo-placeholder.jpg';\n"],"names":["Loader","strokeColor","strokeWidth","animationDuration","width","visible","ListItem","title","id","location","useLocation","className","styles","to","state","from","MoviesList","movies","map","el","useState","isLoading","setIsLoading","trendingList","setTrendingList","getTrendingList","getTrending","data","results","useEffect","axios","response","API_KEY","getMovieInfo","getMovieReviews","page","getMovieCast","searchMovie","query","IMG_PLACEHOLDER"],"sourceRoot":""}