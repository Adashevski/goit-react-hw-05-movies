{"version":3,"file":"static/js/247.37e40f42.chunk.js","mappings":"sPAOe,SAASA,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAU,GAAD,OAAIC,EAAAA,GAAJ,kBAAsBT,EAAtB,YAAoCI,EAASE,EAAc,OACrE,GAAE,CAACN,IAEJ,IAAMU,EAAmB,SAAAC,GACvBA,EAAEC,OAAOC,IAAMC,EAAAA,EAChB,EAED,OACE,0BACE,wBACGT,GACC,0BACE,SAAC,IAAD,MAGFF,EAAKY,KAAI,SAAAC,GAAM,OACb,2BACE,gBACEC,MAAO,IACPJ,IAAG,UAAKK,EAAAA,IAAL,OAAeF,EAAOG,cACzBC,IAAKJ,EAAOK,KACZC,QAASZ,KAEX,uBAAIM,EAAOK,QACX,yBAAG,cAAYL,EAAOO,eARfP,EAAOhB,GADH,OAgBxB,C,uGC1CYQ,EAAS,mCAAG,WACvBgB,EACAC,EACAC,EACAC,GAJuB,gFAMvBD,GAAgB,GANO,kBASHE,EAAAA,EAAAA,IAAUJ,EAAK,CAC/BK,OAAQ,CACNC,QAASC,EAAAA,MAXQ,OASfC,EATe,OAcbC,EAASD,EAATC,KAESR,EAAbE,EAAsBM,EAAKN,GACjBM,GAjBO,gDAmBrBC,QAAQC,IAAR,MAnBqB,yBAqBrBT,GAAgB,GArBK,4EAAH,2D,+HCHf,IAAMK,EAAU,mCACVtB,EAAW,+BACXS,EAAU,kCACVJ,EACX,2J","sources":["components/Cast/Cast.jsx","components/FetchData/FetchData.jsx","components/utils.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchData } from 'components/FetchData/FetchData';\nimport { Loader } from 'components/Loader/Loader';\nimport { IMG_PLACEHOLDER, IMG_URL, Data_URL } from 'components/utils';\n\nexport default function Cast() {\n  const { id } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchData(`${Data_URL}/movie/${id}/credits`, setCast, setIsLoading, 'cast');\n  }, [id]);\n\n  const handleImageError = e => {\n    e.target.src = IMG_PLACEHOLDER;\n  };\n\n  return (\n    <div>\n      <ul>\n        {isLoading ? (\n          <div>\n            <Loader />\n          </div>\n        ) : (\n          cast.map(person => (\n            <li key={person.id}>\n              <img\n                width={100}\n                src={`${IMG_URL}${person.profile_path}`}\n                alt={person.name}\n                onError={handleImageError}\n              />\n              <p>{person.name}</p>\n              <p>Character: {person.character}</p>\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { API_KEY } from 'components/utils';\n\nexport const fetchData = async (\n  url,\n  setState,\n  setLoadingState,\n  returnValue\n) => {\n  setLoadingState(true);\n\n  try {\n    const res = await axios.get(url, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    const { data } = res;\n\n    if (returnValue) setState(data[returnValue]);\n    else setState(data);\n  } catch (error) {\n    console.log(error);\n  } finally {\n    setLoadingState(false);\n  }\n};\n","export const API_KEY = '330fed723c91519f30cbe5ad45b50ac2';\nexport const Data_URL = 'https://api.themoviedb.org/3';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport const IMG_PLACEHOLDER =\n  'https://previews.123rf.com/images/viktorijareut/viktorijareut1905/viktorijareut190500747/123236861-default-avatar-profile-icon-grey-photo-placeholder.jpg';\n"],"names":["Cast","id","useParams","useState","cast","setCast","isLoading","setIsLoading","useEffect","fetchData","Data_URL","handleImageError","e","target","src","IMG_PLACEHOLDER","map","person","width","IMG_URL","profile_path","alt","name","onError","character","url","setState","setLoadingState","returnValue","axios","params","api_key","API_KEY","res","data","console","log"],"sourceRoot":""}